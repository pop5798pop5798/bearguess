@model SITDto.ViewModel.SettingListDto
@{
    Layout = null;
    int i = ViewBag.index ?? 0;
    int allindex = ViewBag.choice ?? 0;
}
@using SITW.Helper
<style>
    #topname {
        display: none;
    }
</style>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "topicForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.topicsettingList[0].id, new { htmlAttributes = new { @value = (i + 1) } })
    @Html.HiddenFor(model => model.topicsettingList[0].gametype, new { htmlAttributes = new { @value = 1 } })

    <div name="topicDiv" class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h4>請新增第 @(i + 1) 題 </h4>
        @* @if (Model.topicsettingList[i].id == 0)
            {
                <div class="form-group">

                    <div class="control-label col-md-2">
                    </div>
                    <div class="col-md-10">
                        <span class="btn btn-danger btn-block" data-ajax="true" name="delTopic">刪除題目</span>
                    </div>
                </div>
            }*@
        <hr />

        <div id="topiclsit">
            @* @Html.HiddenFor(model => t.id)*@
            @*<div class="form-group">
                    @Html.LabelFor(model => model.topicsettingList[i].id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.topicsettingList[i].id, new { htmlAttributes = new { @class = "form-control form_datetime", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.topicsettingList[i].id, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.topicsettingList[0].topicsName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.topicsettingList[0].topicsName, new { htmlAttributes = new { @class = "form-control form_datetime", @style = "color:#ffdc11", required= "required" } })
                    @Html.ValidationMessageFor(model => model.topicsettingList[0].topicsName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2" for="topicsettingList_0__topicsName">設定圖片</label>

                <div class="col-md-5">
                    <span style="color: #ffdc11;">題目圖示183*161(亮面)</span>
                    @Html.ValidationMessageFor(model => model.topicsettingList[0].image, "", new { @class = "text-danger" })
                    <input type="file" id="image" name="image" value="@Model.topicsettingList[0].image" class="form-control" required />

                    @Html.HiddenFor(model => model.topicsettingList[i].image)
                    <span style="color: #ffdc11;">題目圖示183*161(暗面)</span>
                    @Html.ValidationMessageFor(model => model.topicsettingList[0].hoverImage, "", new { @class = "text-danger" })
                    <input type="file" id="hoverimage" name="hoverimage" value="@Model.topicsettingList[0].hoverImage" class="form-control" required />

                    @Html.HiddenFor(model => model.topicsettingList[0].hoverImage)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.topicsettingList[0].choiceType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @{
                        string topicname = "topicsettingList[" + 0 + "].choiceType";
                    }
                    @Html.TopicSelect(topicname, Model.topicsettingList[0].choiceType)

                    @Html.ValidationMessageFor(model => model.topicsettingList[0].choiceType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" name="choiceListGroup" id="choicehide">
                <div class="control-label col-md-2">
                    選項
                </div>

                <div class="col-md-5">


                    @for (int j = 0; j < Model.topicsettingList[0].choicsettingList.Count; j++)
                    {
                        @Html.HiddenFor(model => model.topicsettingList[0].choicsettingList[j].id)
                        <div class="form-group">
                            @Html.LabelFor(model => model.topicsettingList[0].choicsettingList[j].choiceName, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.topicsettingList[0].choicsettingList[j].choiceName, new { htmlAttributes = new { @class = "form-control form_datetime", @style = "color:#ffdc11" } })
                                @Html.ValidationMessageFor(model => model.topicsettingList[0].choicsettingList[j].choiceName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.topicsettingList[0].choicsettingList[j].valid)
                        @Html.HiddenFor(model => model.topicsettingList[0].choicsettingList[j].topiceSetting)
                    }

                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="topcCreate" type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>



        </div>
    </div>

}

