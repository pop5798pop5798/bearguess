@model SITDto.ViewModel.SettingListDto
@{
     Layout = null;
    int index = Model.topicsettingList.Count();
}

<style>
    #choiceshow {
        display: block;
    }

    #choicehide {
        display: none;
    }

    .form-control[readonly] {
        background: #000;
    }
</style>



@using SITW.Helper
<div class="container">
    <div class="row">

        <div class="form-horizontal">
            <h4>自動派彩</h4>
            <hr />
          
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "nabobForm" }))
            {
                @Html.AntiForgeryToken()

                for (int i = 0; i < Model.topicsettingList.Count; i++)
                {
                    @Html.HiddenFor(model => model.topicsettingList[i].Model, new { @Value = "3" })
        <div id="topiclsit">
            @* @Html.HiddenFor(model => t.id)*@
            <div class="form-group">
                @Html.LabelFor(model => model.topicsettingList[i].id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.topicsettingList[i].id, new { htmlAttributes = new { @class = "form-control form_datetime", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.topicsettingList[i].id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.topicsettingList[i].topicsName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.topicsettingList[i].topicsName, new { htmlAttributes = new { @class = "form-control form_datetime", @style = "color:#ffdc11" } })
                    @Html.ValidationMessageFor(model => model.topicsettingList[i].topicsName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.topicsettingList[i].enName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.topicsettingList[i].enName, new { htmlAttributes = new { @class = "form-control form_datetime", @style = "color:#ffdc11" } })
                    @Html.ValidationMessageFor(model => model.topicsettingList[i].enName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.topicsettingList[i].choiceType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @{
                        string topicname = "topicsettingList[" + i + "].choiceType";
                    }
                    @Html.TopicSelect(topicname, Model.topicsettingList[i].choiceType)

                    @Html.ValidationMessageFor(model => model.topicsettingList[i].choiceType, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (Model.topicsettingList[i].choiceType == true)
            {
                <div class="form-group" name="choiceListGroup" id="choiceshow">
                    <div class="control-label col-md-2">
                        選項
                    </div>

                    <div class="col-md-5">


                        @for (int j = 0; j < Model.topicsettingList[i].choicsettingList.Count; j++)
                        {
                            @Html.HiddenFor(model => model.topicsettingList[i].choicsettingList[j].id)
                            <div class="form-group">
                                @Html.LabelFor(model => model.topicsettingList[i].choicsettingList[j].choiceName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.topicsettingList[i].choicsettingList[j].choiceName, new { htmlAttributes = new { @class = "form-control form_datetime", @style = "color:#ffdc11" } })
                                    @Html.ValidationMessageFor(model => model.topicsettingList[i].choicsettingList[j].choiceName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.topicsettingList[i].choicsettingList[j].eName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.topicsettingList[i].choicsettingList[j].eName, new { htmlAttributes = new { @class = "form-control form_datetime", @style = "color:#ffdc11" } })
                                    @Html.ValidationMessageFor(model => model.topicsettingList[i].choicsettingList[j].eName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @Html.HiddenFor(model => model.topicsettingList[i].choicsettingList[j].valid)
                            @Html.HiddenFor(model => model.topicsettingList[i].choicsettingList[j].topiceSetting)
                            @Html.HiddenFor(model => model.topicsettingList[i].choicsettingList[j].cNumberType)
                        }

                    </div>
                </div>

            }
            else
            {
                <div class="form-group" name="choiceListGroup" id="choicehide">
                    <div class="control-label col-md-2">
                        選項
                    </div>

                    <div class="col-md-5">


                        @for (int j = 0; j < Model.topicsettingList[i].choicsettingList.Count; j++)
                        {
                            @Html.HiddenFor(model => model.topicsettingList[i].choicsettingList[j].id)
                            <div class="form-group">
                                @Html.LabelFor(model => model.topicsettingList[i].choicsettingList[j].choiceName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.topicsettingList[i].choicsettingList[j].choiceName, new { htmlAttributes = new { @class = "form-control form_datetime", @style = "color:#ffdc11" } })
                                    @Html.ValidationMessageFor(model => model.topicsettingList[i].choicsettingList[j].choiceName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @Html.HiddenFor(model => model.topicsettingList[i].choicsettingList[j].valid)
                            @Html.HiddenFor(model => model.topicsettingList[i].choicsettingList[j].topiceSetting)
                            @Html.HiddenFor(model => model.topicsettingList[i].choicsettingList[j].cNumberType)
                        }

                    </div>
                </div>

            }
            @if (i == 0)
            {
                <span>當為BO2 自動加入平局選項</span>
            }

            @Html.HiddenFor(model => model.topicsettingList[i].gametype)
            @Html.HiddenFor(model => model.topicsettingList[i].autotype)
            @Html.HiddenFor(model => model.topicsettingList[i].numberType)

            @* @Html.HiddenFor(model => model.topicsettingList[i].valid)
        @Html.TopicSelect(topicname, Model.topicsettingList[i].choiceType)*@

            <div class="form-group">
                @Html.LabelFor(model => model.topicsettingList[i].valid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @{
                        string topicValid = "topicsettingList[" + i + "].valid";
                    }
                    @Html.TopicValidSelect(topicValid, Model.topicsettingList[i].valid)

                    @Html.ValidationMessageFor(model => model.topicsettingList[i].valid, "", new { @class = "text-danger" })
                </div>
            </div>





            <hr>
        </div>
                }
                <hr>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" id="dgongo" value="保存" class="btn btn-default" />
                    </div>
                </div>

            }



        </div>


            </div>
        </div>
























