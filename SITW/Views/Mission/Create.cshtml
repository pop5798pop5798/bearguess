@model SITW.Models.ViewModel.MissionViewModel
@{
    ViewBag.Title = "Create";
    int index = Model.MissionEndList.Count;
}
@using SITW.Helper

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "missionForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Missions</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imgURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <h6>上傳新圖</h6>
                <input type="file" id="image" name="image" value="@Model.imgURL" class="form-control">
                @Html.ValidationMessageFor(model => model.imgURL, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-6">
                        <h6>現有圖片</h6>
                        @Html.Action("ImageList", "Tools", new { path = "MissionImg" })
                    </div>
                </div>
                @Html.HiddenFor(model => model.imgURL)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sdate, new { htmlAttributes = new { @class = "form-control form_datetime" } })
                @Html.ValidationMessageFor(model => model.sdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.edate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.edate, new { htmlAttributes = new { @class = "form-control form_datetime" } })
                @Html.ValidationMessageFor(model => model.edate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cycle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.MissionCycleSelect("cycle", Model.cycle)
                @Html.ValidationMessageFor(model => model.cycle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                任務開始條件
            </div>
            <div class="col-md-10">
                <!-- topics! -->
                <div id="MissionStart-group">

                </div>
                @Ajax.ActionLink(linkText: "+", actionName: "_MissionStart", controllerName: "Mission", routeValues: new { index = index }, ajaxOptions: new AjaxOptions
           {
               InsertionMode = InsertionMode.InsertAfter,
               UpdateTargetId = "MissionStart-group",
               OnSuccess = "indexIterateMissionStart"
           },
                    htmlAttributes: new { id = "addMissionStart", @class = "btn btn-default" })
                @Html.ValidationMessageFor(model => model.MissionStartList, "", new { @class = "text-danger" })




            </div>
        </div>


        <div class="form-group">
            <div class="control-label col-md-2">
                任務完成條件
            </div>
            <div class="col-md-10">
                <!-- topics! -->
                <div id="MissionEnd-group">

                </div>
                @Ajax.ActionLink(linkText: "+", actionName: "_MissionEnd", controllerName: "Mission", routeValues: new { index = index }, ajaxOptions: new AjaxOptions
           {
               InsertionMode = InsertionMode.InsertAfter,
               UpdateTargetId = "MissionEnd-group",
               OnSuccess = "indexIterateMissionEnd"
           },
                    htmlAttributes: new { id = "addMissionEnd", @class = "btn btn-default" })
                @Html.ValidationMessageFor(model => model.MissionEndList, "", new { @class = "text-danger" })




            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                任務獎勵
            </div>
            <div class="col-md-10">
                <!-- topics! -->
                <div id="MissionAsset-group">

                </div>
                @Ajax.ActionLink(linkText: "+", actionName: "_MissionAsset", controllerName: "Mission", routeValues: new { index = index }, ajaxOptions: new AjaxOptions
           {
               InsertionMode = InsertionMode.InsertAfter,
               UpdateTargetId = "MissionAsset-group",
               OnSuccess = "indexIterateMissionAsset"
           },
                    htmlAttributes: new { id = "addMissionAsset", @class = "btn btn-default" })
                @Html.ValidationMessageFor(model => model.MissionAssetList, "", new { @class = "text-danger" })




            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryajax")

<script type="text/javascript">
    var currentIndex = 0;

    function indexIterateMissionEnd() {
        currentIndex = $("div[name=divMissionEnd]").length;
        var newHref = $("#addMissionEnd").attr("href");
        var newerHref = newHref.replace(/(?:index=)[0-9]+/i, "index=" + currentIndex);
        $("#addMissionEnd").attr("href", newerHref);
        $('#missionForm').removeData("validator");
        $.validator.unobtrusive.parse($('#missionForm'));
        $('#missionForm').selectpicker('refresh');

        resetindexMission();
    };

    function indexIterateMissionStart() {
        currentIndex = $("div[name=divMissionStart]").length;
        var newHref = $("#addMissionStart").attr("href");
        var newerHref = newHref.replace(/(?:index=)[0-9]+/i, "index=" + currentIndex);
        $("#addMissionStart").attr("href", newerHref);
        $('#missionForm').removeData("validator");
        $.validator.unobtrusive.parse($('#missionForm'));
        $('#missionForm').selectpicker('refresh');

        resetindexMission();
    };

    function indexIterateMissionAsset() {
        currentIndex = $("div[name=divMissionAsset]").length;
        var newHref = $("#addMissionAsset").attr("href");
        var newerHref = newHref.replace(/(?:index=)[0-9]+/i, "index=" + currentIndex);
        $("#addMissionAsset").attr("href", newerHref);
        $('#missionForm').removeData("validator");
        $.validator.unobtrusive.parse($('#missionForm'));
        $('#missionForm').selectpicker('refresh');

        resetindexMission();
    };

    function deleteMissionStartEnd(item) {
        $(item).parents("[name=divMissionStart]").remove();
        $(item).parents("[name=divMissionEnd]").remove();
        $(item).parents("[name=divMissionAsset]").remove();
        resetindexMission();


    };

    function resetindexMission()
    {
        var MissionStartList = $("div[name=divMissionStart]");
        for (var i = 0; i < MissionStartList.length; i++) {
            $(MissionStartList[i]).find("[name^=MissionStartList]").each(function (index, element) {
                var elementName = $(element).attr("name");
                elementName = elementName.replace(/(?:MissionStartList\[)[0-9]+(?:\])/g, "MissionStartList[" + i + "]");
                $(element).attr("name", elementName);
            });
        }

        var MissionEndList = $("div[name=divMissionEnd]");
        for (var i = 0; i < MissionEndList.length; i++) {
            $(MissionEndList[i]).find("[name^=MissionEndList]").each(function (index, element) {
                var elementName = $(element).attr("name");
                elementName = elementName.replace(/(?:MissionEndList\[)[0-9]+(?:\])/g, "MissionEndList[" + i + "]");
                $(element).attr("name", elementName);
            });
        }

        var MissionAssetList = $("div[name=divMissionAsset]");
        for (var i = 0; i < MissionAssetList.length; i++) {
            $(MissionAssetList[i]).find("[name^=MissionAssetList]").each(function (index, element) {
                var elementName = $(element).attr("name");
                elementName = elementName.replace(/(?:MissionAssetList\[)[0-9]+(?:\])/g, "MissionAssetList[" + i + "]");
                $(element).attr("name", elementName);
            });
        }
   }

    $(document).ready(function () {
        $("#betModels label").click(function () {
            var bM = $(this).find("input[name=betModel]").val();
            if (bM == 1)
            {
                $("#rakegroup").hide();
                $("div[name=Oddsgroup]").show();
            }
            else if (bM == 2)
            {
                $("#rakegroup").show();
                $("div[name=Oddsgroup]").hide();
            }
        });
        $(".form_datetime").datetimepicker();


        $("input:submit").click(function () {


            //$("[data-valmsg-for]").html("");
            //var boolAllTrue = true;
            //if ($("input[name^='topicList'][name$='title']").length == 0) {
            //    $("[data-valmsg-for=topicList]").html("需新增題目");
            //    boolAllTrue = false;
            //}
            //if ($("input[name^='topicList'][name$='choiceStr']").length != 0) {
            //    $("[data-valmsg-for=topicList]").html("需新增題目");
            //    boolAllTrue = false;
            //}

            //return boolAllTrue;
        });

    });
</script>

}